{"version":3,"sources":["lib/dice3.ts","ProbTable.tsx","DiceNumberSelector.tsx","App.js","serviceWorker.js","index.js"],"names":["dice3Permutations","nDice","nZeros","nOnes","regenerator_default","a","wrap","_context","prev","next","stop","_marked","factorial","n","result","i","pow","Math","dice3Probability","nTwos","getOrDefault","m","key","defaultValue","mapValue","get","isUndefined","dice3Distribution","Map","set","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","done","perm","value","_perm","Object","slicedToArray","probability","score","err","return","Multisum","exclusive","inclusive","classCallCheck","this","DistributionSummaryEntry","preSumExclusive","current","postSumInclusive","preSum","postSum","makeDistributionSummary","distribution","_marked2","mark","generator","iterable","r","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","sum","values","entries","Array","from","_i","_ref3","_ref2","_context2","length","sort","lh","rh","x","y","formatNumber","toFixed","PropTableEntry","summaryEntry","props","react_default","createElement","className","Component","ProbTable","_Component2","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","deltaSummaries","leftDistribution","rightDistribution","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_ref6","_ref5","leftScore","leftProb","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_ref9","_ref8","rightScore","rightProb","cuScore","oldValue","subtractDistributions","goodDice","evilDice","map","deltaSummary","ProbTable_PropTableEntry","POSSIBLE_DICE","DiceNumberSelector","_Component","call","_this","buttonFactory","onClick","e","setNDice","concat","slice","App","state","_this2","ProbTable_ProbTable","DiceNumberSelector_DiceNumberSelector","setState","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.578c7c25.chunk.js","sourcesContent":["import { isUndefined } from \"util\";\r\n\r\nexport function* dice3Permutations(nDice: number) {\r\n    for (var nZeros = 0; nZeros <= nDice; ++nZeros) {\r\n        for (var nOnes = 0; nOnes + nZeros <= nDice; ++nOnes) {\r\n            yield [nZeros, nOnes, nDice - nZeros - nOnes];\r\n        }\r\n    }\r\n}\r\n\r\nfunction factorial(n: number) {\r\n    var result = 1\r\n    for (var i = 1; i <= n; ++i) {\r\n        result *= i\r\n    }\r\n    return result\r\n}\r\nconst pow = Math.pow\r\n\r\nexport function dice3Probability(nZeros: number, nOnes: number, nTwos: number) {\r\n    let n = nZeros + nOnes + nTwos;\r\n\r\n    return factorial(n) / (factorial(nZeros) * factorial(nOnes) * factorial(nTwos) * pow(3, n))\r\n}\r\n\r\nfunction getOrDefault<K, V>(m: Map<K, V>, key:K, defaultValue:V): V {\r\n    const mapValue = m.get(key);\r\n    if (isUndefined(mapValue)) {\r\n        return defaultValue;\r\n    }\r\n    return mapValue\r\n}\r\n\r\nexport function dice3Distribution(n: number) {\r\n    let result: Map<number, number> = new Map()\r\n    for (var i = 0; i <= 2 * n; ++i) {\r\n        result.set(i, 0.0)\r\n    }\r\n    for (let perm of dice3Permutations(n)) {\r\n        let [nZeros, nOnes, nTwos] = perm\r\n        let probability = dice3Probability(perm[0], perm[1], perm[2])\r\n        let score = nOnes + 2 * nTwos\r\n        result.set(score, getOrDefault(result, score, 0.0) + probability)\r\n    }\r\n    return result\r\n}\r\n\r\nexport function addNumberToDistribution(distribution: Map<number, number>, x: number) {\r\n    let result = new Map()\r\n    for (let i of distribution.keys()) {\r\n        result.set(i + x,  distribution.get(i))\r\n    }\r\n    return result\r\n}\r\n\r\nexport class Multisum {\r\n    constructor(\r\n        public exclusive: number,\r\n        public inclusive: number) {\r\n    }\r\n}\r\n\r\nexport class DistributionSummaryEntry {\r\n    public preSum: Multisum\r\n    public postSum: Multisum\r\n    constructor(public n :number, preSumExclusive: number, current: number, postSumInclusive: number) {\r\n        this.preSum = new Multisum(preSumExclusive, preSumExclusive + current)\r\n        this.postSum = new Multisum(postSumInclusive - current, postSumInclusive)\r\n    }\r\n}\r\n\r\nfunction sum(iterable: any) {\r\n    var r = 0\r\n    for (let x of iterable) {\r\n        r += x\r\n    }\r\n    return r\r\n}\r\n\r\nexport function makeDistributionSummary(distribution: Map<number, number>): DistributionSummaryEntry[] {\r\n    var preSum = 0\r\n    var postSum = sum(distribution.values())\r\n    let entries = Array.from(distribution.entries())\r\n    entries.sort((lh, rh) => {\r\n        let x = lh[0]\r\n        let y = rh[0]\r\n        if (x < y) {\r\n            return -1\r\n        } else if (x > y) {\r\n            return 1\r\n        } else {\r\n            return 0\r\n        }\r\n    })\r\n\r\n    function* generator() {\r\n\r\n        for (let [score, probability] of entries) {\r\n            yield new DistributionSummaryEntry(score, preSum, probability, postSum)\r\n            preSum += probability\r\n            postSum -= probability\r\n        }\r\n    }\r\n\r\n    return Array.from(generator());\r\n}\r\n\r\nexport function subtractDistributions(leftDistribution: Map<number, number>, rightDistribution: Map<number, number>):Map<number, number> {\r\n    let result: Map<number, number> = new Map()\r\n    for (let [leftScore, leftProb] of leftDistribution.entries()) {\r\n        for (let [rightScore, rightProb] of rightDistribution.entries()) {\r\n            let cuScore = leftScore - rightScore\r\n            let oldValue = getOrDefault(result, cuScore, 0.0)\r\n            result.set(cuScore, oldValue + leftProb * rightProb)\r\n        }\r\n    }\r\n    return result\r\n}\r\n","import React, { Component } from 'react';\r\nimport {dice3Distribution, makeDistributionSummary, subtractDistributions, DistributionSummaryEntry} from './lib/dice3';\r\n\r\nimport './ProbTable.css'\r\n\r\nfunction formatNumber(x: number): string {\r\n    return (100 * x).toFixed(1)\r\n}\r\n\r\nclass PropTableEntry extends Component<{summaryEntry: DistributionSummaryEntry}> {\r\n    render() {\r\n        const summaryEntry = this.props.summaryEntry\r\n        return (\r\n            <div>\r\n                <div className=\"wrapper\">\r\n                    <div className=\"top left\">{formatNumber(summaryEntry.preSum.inclusive)}</div>\r\n                    <div className=\"top right\">{formatNumber(summaryEntry.postSum.inclusive)}</div>\r\n                    <div className=\"center\"></div>\r\n                    <div className=\"center\"> {summaryEntry.n} </div>\r\n                    <div className=\"center\"></div>\r\n                    <div className=\"bottom left\">{formatNumber(summaryEntry.preSum.exclusive)}</div>\r\n                    <div className=\"bottom right\"> {formatNumber(summaryEntry.postSum.exclusive)}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport class ProbTable extends Component<{goodDice: number, evilDice: number}> {\r\n    render() {\r\n        const goodDistribution = dice3Distribution(this.props.goodDice);\r\n        const evilDistribution = dice3Distribution(this.props.evilDice);\r\n\r\n        const deltaDistribution = subtractDistributions(goodDistribution, evilDistribution);\r\n\r\n        const deltaSummaries= makeDistributionSummary(deltaDistribution);\r\n        return (\r\n            <div className='outer-outer'>\r\n                <div className=\"outer\">\r\n                    {deltaSummaries.map((deltaSummary, i) => \r\n                        <PropTableEntry key={i} summaryEntry={deltaSummary}/>)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport './DiceNumberSelector.css'\r\n\r\ntype DiceNumberSelectorProps = {\r\n    nDice: number,\r\n    setNDice: (nDice: number) => void,\r\n}\r\n\r\nconst POSSIBLE_DICE = [0, 1, 2, 3, 4 ,5, 6 ,7 ,8]\r\n\r\nexport class DiceNumberSelector extends Component<DiceNumberSelectorProps, {nDice: number}> {\r\n    constructor(props: DiceNumberSelectorProps) {\r\n        super(props)\r\n    }\r\n    \r\n    render() {\r\n        const buttonFactory = (nDice:number) => (\r\n            <div \r\n                onClick={e => this.props.setNDice(nDice)} \r\n                key={nDice} \r\n                className={`DiceNumberSelector-element d${nDice}` + (this.props.nDice == nDice ? ' selected' : '')}>\r\n                    <div>{nDice}</div>\r\n            </div>)\r\n\r\n        return (\r\n            <div className='DiceNumberSelector-wrapper'>\r\n                {buttonFactory(0)}\r\n                <div className='DiceNumberSelector-container'>\r\n                    {\r\n                        POSSIBLE_DICE.slice(1).map(buttonFactory)\r\n                    }\r\n                </div>\r\n            </div>)\r\n    }\r\n}","import React, { Component } from 'react';\nimport './App.css';\n\nimport {ProbTable} from './ProbTable';\nimport {DiceNumberSelector} from './DiceNumberSelector';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      goodDice: 6,\n      evilDice: 0\n    }\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <ProbTable goodDice={this.state.goodDice} evilDice={this.state.evilDice} />\n        <br/>\n        <div>\n          <h1>Good dice</h1>\n          <DiceNumberSelector nDice={this.state.goodDice} setNDice={nDice => this.setState({goodDice: nDice})}/>\n        </div>\n        <div>\n          <h1>Evil dice</h1>\n          <DiceNumberSelector nDice={this.state.evilDice} setNDice={nDice => this.setState({evilDice: nDice})}/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}